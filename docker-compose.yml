services:
  mongodb:
    image: mongo:latest
    container_name: mongodb_db
    restart: always
    ports:
      - "27017:27017" 
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data/db
    command: ["--quiet"]
  api:
    build:
      context: ./SimpleApiBackend
      dockerfile: Dockerfile
    container_name: net_api
    ports:
      - "8080:8080"
      - "5001:5000" # Puerto HTTP del contenedor
      - "9000:9000" # Puerto de depuración (puedes elegir otro, 9000 es común para C#)
    depends_on:
      - mongodb 
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__MongoDbConnection=mongodb://user:password@mongodb:27017
      - DatabaseSettings__DatabaseName=PropertyDb

    develop:
      watch:
        - path: ./SimpleApiBackend/Program.cs
          action: rebuild
        - path: ./SimpleApiBackend/*.csproj
          action: rebuild
    command: ["dotnet", "watch", "run", "--urls", "http://0.0.0.0:8080", "--non-interactive"]

  frontend:
    build:
      context: ./nextjs-frontend
      dockerfile: Dockerfile
    container_name: next_frontend
    ports:
      - "3000:3000"
    depends_on:
      - api 
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8080
    develop:
      watch:
        - path: ./nextjs-frontend
          action: sync
          target: /app
          ignore:
            - node_modules/
        - path: ./nextjs-frontend/package.json
          action: rebuild
volumes:
  mongo_data: